[tox]
envlist = py,docs,check-formatting,lint
skipsdist = True
usedevelop = True

[testenv]
basepython = python3
deps =
    -r{toxinidir}/dev-requirements.txt
commands =
    coverage run -m pytest {posargs}

[testenv:docs]
deps = -rdocs-requirements.txt
commands =
    # interrogate -vv --fail-under 40 pedalboard

[testenv:check-python-formatting]
basepython = python3
deps = ruff
skip_install = true
commands = ruff check ./ --ignore=E203,F541 --exclude .git,dist,doc,build,vendors,'*.pyi' --line-length 100

[testenv:format-python]
basepython = python3
deps = ruff
skip_install = true
commands = ruff format ./ --exclude .git,dist,doc,build,JUCE,examples,vendors,'*.pyi' --line-length 100

[testenv:format-cpp]
skip_install = true
deps =
allowlist_externals = find, xargs, clang-format, echo, ./scripts/format_cpp.sh
commands = ./scripts/format_cpp.sh

[testenv:lint]
; feel free to add flake8 plugins (i.e. flake8-import-order), add isort,
; or use another linter of your choice
basepython = python3
deps = flake8
skip_install = true
commands = flake8

; The sections defined below are for configuring specific tools that are used
; in the above testenvs. Usually, if the tool is ran directly/outside of tox,
; i.e. `(env) $ pytest`, it will still pick up this configuration.

[flake8]
show-source = true
max-line-length = 120
ignore = W503,E203
exclude = .venv,.tox,.git,dist,doc,*.egg,build,vendors

[pytest]
addopts = 
testpaths = tests
